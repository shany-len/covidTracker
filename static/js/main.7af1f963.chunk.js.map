{"version":3,"sources":["Componentes/PAg1/WorldMap.js","Componentes/PAg1/InfectedDeath.js","Componentes/PAg1/Lista.js","Componentes/PAg1/listas2.js","Componentes/PAg1/chart.js","Componentes/pag1.js","Componentes/Pag2/search.js","Componentes/Pag2/ChartPais.js","Componentes/Pag2/Informacion.js","Componentes/pag.js","Componentes/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["WorldMap","setTooltipContent","countries","data-tip","projectionConfig","scale","geography","geographies","map","geo","onMouseEnter","properties","NAME","ISO_A2","POP_EST","iso","console","log","i","length","countryInfo","iso2","numeral","cases","format","paises","onMouseLeave","style","default","fill","outline","hover","pressed","rsmKey","memo","InfectedDeath","item","className","id","label","cant","Listas","country","Listas2","deaths","Chart","useState","CasesHistorico","setCasesHistorico","DeathHistorico","setDeathHistorico","options1","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","tooltipItem","data","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","options2","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","useEffect","a","fetch","then","response","json","caseData","deathData","fetchData","data-toggle","href","datasets","backgroundColor","borderColor","options","Lista","iso3","Pag1","content","setContent","items","setItems","left","setLeft","axios","result","izq","active","critical","recovered","fetchItems","Search","getQuery","text","setText","placeholder","onChange","e","q","target","onKeyPress","charCode","keyPress","autoFocus","onClick","handleChange","ChartPais","query","timeline","Informacion","status","src","flag","alt","todayCases","todayDeaths","todayRecovered","tests","Pag2","setQuery","info","setInfo","setStatus","NavBar","data-target","role","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7af1f963.chunk.js","sourcesContent":["import React, { memo } from \"react\";\r\nimport numeral from 'numeral';\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Marker\r\n} from \"react-simple-maps\";\r\nimport axios from 'axios';\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst WorldMap = ({ setTooltipContent, countries }) => {\r\n\r\n  const paises= iso =>{\r\n    console.log(iso);\r\n    \r\n    for (var i = 0; i < countries.length; i++){\r\n      if(countries[i].countryInfo.iso2==iso){\r\n        return numeral(countries[i].cases).format(\"0,0\");\r\n      }\r\n    }\r\n    \r\n    \r\n    return \"Sin datos\";\r\n  }\r\n\r\n  return (\r\n\r\n    <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n      \r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { NAME, POP_EST, ISO_A2 } = geo.properties;\r\n                    setTooltipContent(`${NAME} — Contagios: ${paises(ISO_A2)}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"rgb(122, 122, 122)\",\r\n                      outline: \"#FFFFFF\"\r\n                    },\r\n                    hover: {\r\n                      fill: \"#80bfff\",\r\n                      outline: \"none\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#3399ff\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n      </ComposableMap>\r\n   \r\n  );\r\n}\r\nexport default memo(WorldMap);\r\n","import React, { memo, useEffect, useState } from \"react\";\r\n\r\nconst InfectedDeath = ({ item }) => {\r\n   \r\n    return (\r\n        <>\r\n                <div className=\"col-xl-2 data\">\r\n                    <div className=\"card\" id={item.id}>\r\n                        <div className=\"card-body\">\r\n                            <h2 className=\"card-title\">{item.label}</h2>\r\n                            <h4 className=\"card-text\">{item.cant}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default InfectedDeath;\r\n","import React from \"react\";\r\n\r\n/*https://disease.sh/v3/covid-19/countries?sort=cases*/\r\n\r\nconst Listas = ({ item }) => {\r\n    return (\r\n                    <tr>\r\n                        <td>{item.country}</td>\r\n                        <td>{item.cases}</td>\r\n                    </tr>\r\n    );\r\n}\r\n\r\nexport default Listas;","import React from \"react\";\r\n\r\n/*https://disease.sh/v3/covid-19/countries?sort=cases*/\r\n\r\nconst Listas2 = ({ item }) => {\r\n    return (\r\n                    <tr>\r\n                        <td>{item.country}</td>\r\n                        <td>{item.deaths}</td>\r\n                    </tr>\r\n    );\r\n}\r\n\r\nexport default Listas2;","import React, { useState, useEffect } from \"react\";\r\nimport numeral from 'numeral';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Listas from './Lista';\r\nimport Listas2 from './listas2';\r\n\r\n\r\n\r\n\r\nconst Chart = ({ item }) => {\r\n  const [CasesHistorico, setCasesHistorico] = useState({});\r\n  const [DeathHistorico, setDeathHistorico] = useState({});\r\n\r\n  const options1 = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function (value, index, values) {\r\n              return numeral(value).format(\"0 a\");\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const options2 = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: true,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, DeathHistorico) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function (value, index, values) {\r\n              return numeral(value).format(\"0.0a\");\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  \r\n  const buildChartData = (data, cases) => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n    for (let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          x: date,\r\n          y: data[cases][date] - lastDataPoint\r\n        }\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[cases][date];\r\n    }\r\n    return chartData;\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          const caseData = buildChartData(data, 'cases');\r\n          setCasesHistorico(caseData);\r\n          const deathData = buildChartData(data, 'deaths');\r\n          setDeathHistorico(deathData);\r\n        });\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs nav-justified barrita\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#cases\">Casos</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-toggle=\"tab\" href=\"#death\">Muertes</a>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"tab-content\">\r\n        <div id=\"cases\" className=\"container tab-pane active\"><br></br>\r\n        <div className=\"\">\r\n          <h3 className=\"ChartTitle\">Casos</h3>\r\n          <div >\r\n            {CasesHistorico?.length > 0 && (\r\n              <Line \r\n              \r\n                data={{\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: \"rgb(153, 204, 255,1)\",\r\n                      borderColor: \"rgb(0, 153, 255,1)\",\r\n                      data: CasesHistorico,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={options1}\r\n              />\r\n            )}\r\n          </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"lista\">\r\n              <h5 className=\"titulo\">Total de casos por país:</h5>\r\n              <div className=\"container-fluid divC\">\r\n                <table className=\"table table-hover table-borderless table-responsive\">\r\n                  <tbody>\r\n                    {\r\n                      item.map(item => (\r\n                        <Listas key={item.countryInfo.iso3} item={item} />\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div id=\"death\" className=\"container tab-pane fade\"><br></br>\r\n        <div className=\"\">\r\n        <h3 className=\"ChartTitle\">Muertes</h3>\r\n          <div >\r\n            {DeathHistorico?.length > 0 && (\r\n              <Line\r\n                data={{\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: \"#ffcccc\",\r\n                      borderColor: \"#ff4d4d\",\r\n                      data: DeathHistorico,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={options2}\r\n              />\r\n            )}\r\n          </div> \r\n          </div>\r\n          <div>         \r\n            <div className=\"lista\">\r\n              <h5 className=\"titulo\">Total de muertes por pais</h5>\r\n              <div className=\"container-fluid divM\">\r\n                <table className=\"table table-hover table-borderless table-responsive\">\r\n                  <tbody>\r\n                    {\r\n                      item.map(item => (\r\n                        <Listas2 key={item.countryInfo.iso3} item={item} />\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;","import React, { memo, useEffect, useState } from \"react\";\r\nimport WorldMap from './PAg1/WorldMap';\r\nimport InfectedDeath from './PAg1/InfectedDeath';\r\nimport axios from 'axios';\r\nimport Chart from './PAg1/chart';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Pag1 = () => {\r\n    const [content, setContent] = useState(\"\");\r\n    const [items, setItems] = useState([]);\r\n    const [left, setLeft] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchItems = async () => {\r\n        const result = await axios(\r\n          \"https://disease.sh/v3/covid-19/all\"\r\n        );\r\n        const izq =[ \r\n          {id: 'A', label: \"Casos: \", cant: result.data.cases},\r\n          {id: 'B', label: \"Activos\", cant: result.data.active},\r\n          {id: 'C', label: \"Muertes: \", cant: result.data.deaths},\r\n          {id: 'D', label: \"Criticos\", cant: result.data.critical},\r\n          {id: 'E', label: \"Recuperados: \", cant: result.data.recovered}\r\n        ];\r\n        setLeft(izq);\r\n        console.log(izq);\r\n      }\r\n      fetchItems();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      const fetchItems = async () => {\r\n        const result = await axios(\r\n          \"https://disease.sh/v3/covid-19/countries?sort=cases\"\r\n        );\r\n        console.log(result.data);\r\n        setItems(result.data);\r\n  \r\n      }\r\n      fetchItems();\r\n    }, []);\r\n  \r\n    return (\r\n        <div className=\"container-fluid mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-2 data\">\r\n                    <h1 className=\"tituloWW\">WorldWide: </h1>\r\n                </div>\r\n                \r\n                {\r\n                    left.map(left => (\r\n                        <InfectedDeath key={left.id} item={left} />\r\n                    ))\r\n                }\r\n    \r\n            </div>\r\n\r\n            <div className=\"row \">\r\n                <div className=\"col-sm-8\">\r\n                    <WorldMap setTooltipContent={setContent} countries={items} />\r\n                    <ReactTooltip>{content}</ReactTooltip>\r\n                </div>\r\n                <div className=\"col-sm-4\" >\r\n\r\n                    <div className=\"chart\">\r\n                        <Chart item={items}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pag1;","import React, {useState} from 'react';\r\n\r\nconst Search=({ getQuery })=>{\r\n    const [text, setText] = useState('');\r\n\r\n    const onChange = (q) =>{\r\n        setText(q);\r\n       \r\n    }\r\n\r\n    const handleChange=(text)=>{\r\n        getQuery(text);\r\n        setText('');\r\n    }\r\n\r\n    const keyPress=(q, text)=>{\r\n        if(q.charCode === 13){\r\n            getQuery(text);\r\n            setText('');\r\n        }\r\n    }\r\n    return(\r\n        <div className='input-group mb-3 search'>\r\n        \r\n                <input type='text' className='form-control  input' placeholder='Buscar' \r\n                value= {text}\r\n                onChange={(e)=>onChange(e.target.value)}\r\n                onKeyPress={(e)=>keyPress(e, text)} autoFocus></input>\r\n                <div className=\"input-group-append\">\r\n                <button className=\"btn btn-success\" onClick={()=>handleChange(text)}>Buscar</button>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search;\r\n","//https://disease.sh/v3/covid-19/historical/chile?lastdays=120\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport numeral from 'numeral';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nconst ChartPais = ({ query }) => {\r\n  const [CasesHistorico, setCasesHistorico] = useState({});\r\n  const [DeathHistorico, setDeathHistorico] = useState({});\r\n\r\n  const options1 = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const options2 = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: true,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, DeathHistorico) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n\r\n  const buildChartData = (data, cases) => {\r\n    const chartData = [];\r\n    console.log(\"buildChart\" + data.cases)\r\n    let lastDataPoint;\r\n    for (let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          x: date,\r\n          y: data[cases][date] - lastDataPoint\r\n        }\r\n        chartData.push(newDataPoint);\r\n      }\r\n\r\n      lastDataPoint = data[cases][date];\r\n    }\r\n    return chartData;\r\n\r\n  }\r\n  /*JSON.stringify() */\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      console.log(\"query: \" + query);\r\n      try {\r\n        const result = await axios(\r\n          `https://disease.sh/v3/covid-19/historical/${query}?lastdays=120`\r\n        )\r\n\r\n        console.log(result.data.timeline);\r\n        const data = result.data.timeline;\r\n        console.log(data);\r\n        const caseData = buildChartData(data, 'cases');\r\n        setCasesHistorico(caseData);\r\n        const deathData = buildChartData(data, 'deaths');\r\n        setDeathHistorico(deathData);\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchItems();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-6 data\">\r\n        <div className=\"\">\r\n          <h3 className=\"ChartTitle\">Casos</h3>\r\n          <div>\r\n            {CasesHistorico?.length > 0 && (\r\n              <Line\r\n                data={{\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: \"rgb(153, 204, 255,1)\",\r\n                      borderColor: \"rgb(0, 153, 255,1)\",\r\n                      data: CasesHistorico,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={options2}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-sm-6 data\">\r\n        <div className=\"\">\r\n          <h3 className=\"ChartTitle\">Muertes</h3>\r\n          <div>\r\n            {DeathHistorico?.length > 0 && (\r\n              <Line\r\n                data={{\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: \"#ffcccc\",\r\n                      borderColor: \"#ff4d4d\",\r\n                      data: DeathHistorico,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={options2}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartPais;","import React from 'react';\r\nimport ChartPais from './ChartPais';\r\n\r\nconst Informacion = ({ data, status }) => {\r\n\r\n    if (status == 200) {\r\n        return (\r\n            <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" id=\"pais\">\r\n                    <div className=\"col-xl-12 data\">\r\n                        <h2 className=\"paisLabel\">País: {data.country}</h2>\r\n                        <img className=\"imagen\" src={data.countryInfo.flag} alt={data.country}></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" id=\"casos\">\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"A\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Casos Confirmados</h4>\r\n                                <p className=\"card-text\">{data.cases}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"A\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Confirmados hoy</h4>\r\n                                <p className=\"card-text\">{data.todayCases}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"A\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Casos Activos</h4>\r\n                                <p className=\"card-text\">{data.active}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" id=\"muertes\">\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"C\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Pacientes Criticos</h4>\r\n                                <p className=\"card-text\">{data.critical}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"C\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Muertes Confirmadas</h4>\r\n                                <p className=\"card-text\">{data.deaths}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"C\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Muertes hoy</h4>\r\n                                <p className=\"card-text\">{data.todayDeaths}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" id=\"recover\">\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"E\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Recuperados</h4>\r\n                                <p className=\"card-text\">{data.recovered}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"E\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Recuperados hoy</h4>\r\n                                <p className=\"card-text\">{data.todayRecovered}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"E\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Test realizados</h4>\r\n                                <p className=\"card-text\">{data.tests}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h2 className=\"chart2 paisLabel\">Datos de los ultimos 4 meses</h2>\r\n                <div className=\"ChartContenedor\">\r\n            <ChartPais query={data.country} />\r\n            </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n    else if (status == 404) {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 img\">\r\n                        <img src=\"https://www.initcoms.com/wp-content/uploads/2020/07/404-error-not-found-1.png\" className=\"vector\"></img>\r\n                        <h2 className=\"error\">No se poseen datos del país solicitado</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container-fluid inicio\">\r\n                <br></br>\r\n                <div className=\"row \">\r\n                    <div className=\"col-xl-12 \">\r\n                        <h2 className=\"error\">Busque un país por su nombre</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Informacion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Search from './Pag2/search';\r\nimport Informacion from './Pag2/Informacion'\r\n\r\nconst Pag2 = () => {\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [info, setInfo] = useState({});\r\n    const [status, setStatus] = useState(500);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            console.log(\"query: \" + query);\r\n            try{\r\n                const result = await axios(\r\n                `https://disease.sh/v3/covid-19/countries/${query}` \r\n                )\r\n                \r\n                console.log(result.data);\r\n                console.log(\"status: \" + result.status);\r\n                setInfo(result.data);\r\n                if (query == '') {\r\n                    setStatus(500);\r\n                } else {\r\n                    setStatus(result.status)\r\n                };\r\n            }catch(err) {\r\n                console.log(err);\r\n                setStatus(404);\r\n            }\r\n           console.log('sttatus post query ' + status)\r\n        }\r\n        fetchItems();\r\n    }, [query]);\r\n\r\n\r\n    return (\r\n        <div >\r\n            <div>\r\n                <Search getQuery={(q) => setQuery(q)} />\r\n            \r\n                <Informacion data={info} status={status} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pag2;","import React from 'react';\r\nimport Pag1 from './pag1';\r\nimport Pag2 from './pag';\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-md bg-dark navbar-dark fixed-top \">\r\n                <a className=\"navbar-brand\" >Coronavirus Tracker</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavbar\">\r\n                    <ul className=\"nav nav-pills barra \" role=\"tablist\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" data-toggle=\"pill\" href=\"#world\">World</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"pill\" href=\"#country\">Country</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <div className=\"tab-content\">\r\n                <div id=\"world\" className=\"container-fluid tab-pane active\"><br></br>\r\n                    <Pag1 />\r\n                </div>\r\n                <div id=\"country\" className=\"container-fluid tab-pane fade\"><br></br>\r\n                    <Pag2 />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default NavBar;","import React, { useState, useEffect } from 'react';\nimport NavBar from './Componentes/Navbar';\nimport Pag1 from './Componentes/pag1';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './App.css';\nimport Pag2 from './Componentes/pag'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nimport axios from 'axios';\n\nfunction App() {\n \n \n /* <Pag2 />  */\n\n  return (\n    <>\n      <NavBar />\n    </>\n    \n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}